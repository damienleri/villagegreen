## Documentation:
# Examples https://aws-amplify.github.io/docs/cli-toolchain/graphql#data-access-patterns

## Notes:
# AWSTimestamp is preferred over datetime

type User @model {
  id: ID!
  createdAt: String
  updatedAt: String
  phone: AWSPhone!
  firstName: String
  lastName: String
  isParent: Boolean
  createdContacts: [Contact]
    @connection(keyName: "createdByUser", fields: ["id"])
  ownedContacts: [Contact] @connection(keyName: "ownedByUser", fields: ["id"])
}

type Contact
  @model
  @key(name: "createdByUser", fields: ["createdByUserId"])
  @key(name: "ownedByUser", fields: ["ownedByUserId"]) {
  id: ID!
  createdAt: String
  updatedAt: String
  type: String! ## 'parent', 'kid', or 'friend'
  phone: AWSPhone!
  firstName: String
  lastName: String
  createdByUserId: ID!
  createdByUser: User! @connection(fields: ["createdByUserId"])
  ownedByUserId: ID
  ownedByUser: User @connection(fields: ["ownedByUserId"])
}

# type Person @model {
#   id: ID!
#   createdAt: String
#   updatedAt: String
#   phone: AWSPhone!
#   user: User @connection
#   parents: [Person] @connection
# }
#
# type UserKnowsPerson @model {
#   id: ID!
#   createdAt: String
#   updatedAt: String
#   user: User @connection
#   person: Person @connection
#   firstName: String
#   lastName: String
# }

# Add your teen:
## Parent submits teen's phone, first, last
##   System creates Contact: phone, first, last, type='kid', createdbyuserid
##   System sends invitation to contact.phone
## Kid creates an account with phone:
##  If existing contact with same phone:
##    System sets contact.ownedByUser and prepopulates first, last, and isParent (from most recent contact with this phone)
##    User is prompted to add (with one-click) reciprocal contacts for each user who added them as contact. If they approve the one for parent:
##       System creates Contact: parent's phone, first, last, type='parent', createdByUser
## Kid invites friend:
